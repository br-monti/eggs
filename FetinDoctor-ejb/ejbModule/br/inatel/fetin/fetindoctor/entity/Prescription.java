package br.inatel.fetin.fetindoctor.entity;

// Generated 14/09/2015 20:44:26 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Prescription generated by hbm2java
 */
@Entity
@Table(name = "prescription", catalog = "telit_user_side")
public class Prescription implements java.io.Serializable {

	private Integer id;
	private PrescriptionType prescriptionType;
	private Clinic clinic;
	private Patient patient;
	private Doctor doctor;
	private Date date;
	private String accessCode;
	private Set<PrescriptionRemedy> prescriptionRemedies = new HashSet<PrescriptionRemedy>(
			0);

	public Prescription() {
	}

	public Prescription(PrescriptionType prescriptionType, Clinic clinic,
			Patient patient, Doctor doctor, Date date) {
		this.prescriptionType = prescriptionType;
		this.clinic = clinic;
		this.patient = patient;
		this.doctor = doctor;
		this.date = date;
	}

	public Prescription(PrescriptionType prescriptionType, Clinic clinic,
			Patient patient, Doctor doctor, Date date, String accessCode,
			Set<PrescriptionRemedy> prescriptionRemedies) {
		this.prescriptionType = prescriptionType;
		this.clinic = clinic;
		this.patient = patient;
		this.doctor = doctor;
		this.date = date;
		this.accessCode = accessCode;
		this.prescriptionRemedies = prescriptionRemedies;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "prescription_type_id", nullable = false)
	@NotNull
	public PrescriptionType getPrescriptionType() {
		return this.prescriptionType;
	}

	public void setPrescriptionType(PrescriptionType prescriptionType) {
		this.prescriptionType = prescriptionType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "clinic_id", nullable = false)
	@NotNull
	public Clinic getClinic() {
		return this.clinic;
	}

	public void setClinic(Clinic clinic) {
		this.clinic = clinic;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "patient_id", nullable = false)
	@NotNull
	public Patient getPatient() {
		return this.patient;
	}

	public void setPatient(Patient patient) {
		this.patient = patient;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "doctor_id", nullable = false)
	@NotNull
	public Doctor getDoctor() {
		return this.doctor;
	}

	public void setDoctor(Doctor doctor) {
		this.doctor = doctor;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date", nullable = false, length = 10)
	@NotNull
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Column(name = "access_code", length = 45)
	@Length(max = 45)
	public String getAccessCode() {
		return this.accessCode;
	}

	public void setAccessCode(String accessCode) {
		this.accessCode = accessCode;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "prescription")
	public Set<PrescriptionRemedy> getPrescriptionRemedies() {
		return this.prescriptionRemedies;
	}

	public void setPrescriptionRemedies(
			Set<PrescriptionRemedy> prescriptionRemedies) {
		this.prescriptionRemedies = prescriptionRemedies;
	}

}
