package br.inatel.fetin.fetindoctor.entity;

// Generated 14/09/2015 20:44:26 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * PrescriptionRemedy generated by hbm2java
 */
@Entity
@Table(name = "prescription_remedy", catalog = "telit_user_side")
public class PrescriptionRemedy implements java.io.Serializable {

	private PrescriptionRemedyId id;
	private Prescription prescription;
	private Remedy remedy;
	private int quantityTotal;
	private String observation;
	private Set<TreatmentHour> treatmentHours = new HashSet<TreatmentHour>(0);

	public PrescriptionRemedy() {
	}

	public PrescriptionRemedy(PrescriptionRemedyId id,
			Prescription prescription, Remedy remedy, int quantityTotal,
			String observation) {
		this.id = id;
		this.prescription = prescription;
		this.remedy = remedy;
		this.quantityTotal = quantityTotal;
		this.observation = observation;
	}

	public PrescriptionRemedy(PrescriptionRemedyId id,
			Prescription prescription, Remedy remedy, int quantityTotal,
			String observation, Set<TreatmentHour> treatmentHours) {
		this.id = id;
		this.prescription = prescription;
		this.remedy = remedy;
		this.quantityTotal = quantityTotal;
		this.observation = observation;
		this.treatmentHours = treatmentHours;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "id", column = @Column(name = "id", nullable = false)),
			@AttributeOverride(name = "prescriptionId", column = @Column(name = "prescription_id", nullable = false)),
			@AttributeOverride(name = "remedyId", column = @Column(name = "remedy_id", nullable = false)) })
	@NotNull
	public PrescriptionRemedyId getId() {
		return this.id;
	}

	public void setId(PrescriptionRemedyId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "prescription_id", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Prescription getPrescription() {
		return this.prescription;
	}

	public void setPrescription(Prescription prescription) {
		this.prescription = prescription;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "remedy_id", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Remedy getRemedy() {
		return this.remedy;
	}

	public void setRemedy(Remedy remedy) {
		this.remedy = remedy;
	}

	@Column(name = "quantity_total", nullable = false)
	public int getQuantityTotal() {
		return this.quantityTotal;
	}

	public void setQuantityTotal(int quantityTotal) {
		this.quantityTotal = quantityTotal;
	}

	@Column(name = "observation", nullable = false, length = 200)
	@NotNull
	@Length(max = 200)
	public String getObservation() {
		return this.observation;
	}

	public void setObservation(String observation) {
		this.observation = observation;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "prescriptionRemedy")
	public Set<TreatmentHour> getTreatmentHours() {
		return this.treatmentHours;
	}

	public void setTreatmentHours(Set<TreatmentHour> treatmentHours) {
		this.treatmentHours = treatmentHours;
	}

}
